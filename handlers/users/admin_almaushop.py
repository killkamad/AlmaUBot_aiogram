import logging
from aiogram.utils import exceptions
from aiogram import types
from aiogram.types import CallbackQuery, ContentType
from aiogram.dispatcher import FSMContext
from loader import dp, bot

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards.inline import almau_shop_faq_delete_callback, almau_shop_faq_edit_callback, \
    inline_keyboard_almau_shop_admin, \
    inline_keyboard_add_almaushop_faq_or_cancel, inline_keyboard_delete_faq_almaushop, cancel_or_delete_faq_almau_shop, \
    inline_keyboard_edit_faq_almaushop, inline_keyboard_edit_faq_almaushop_choice, \
    inline_keyboard_edit_almaushop_faq_or_cancel, inline_keyboard_edit_button_content_almaushop_or_cancel, \
    inline_keyboard_cancel_almaushop_faq_create, inline_keyboard_cancel_almaushop_faq_update, \
    inline_keyboard_cancel_almaushop_website_contacts

# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –ë–î –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
from utils import db_api as db

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤
from utils.almaushop_parser import AlmauShop, AlmauShopBooks

# –ò–º–ø–æ—Ä—Ç —Å—Ç–µ–π—Ç–æ–≤
from states.admin import CreateFaqAlmauShop, DeleteFaqAlmauShop, EditFaqAlmauShop, EditButtonContentAlmauShop

import aiogram.utils.markdown as fmt
from utils.misc import rate_limit


############### –ê–¥–º–∏–Ω –º–µ–Ω—é –¥–ª—è AlmaU Shop ####################
# –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ almaushop.kz –º–µ—Ä—á–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É –≤ –ë–î
@dp.callback_query_handler(text_contains='update_almaushop_merch')
async def callback_inline_update_almaushop_merch(call: CallbackQuery):
    logging.info(
        f'User({call.message.chat.id}) –∑–∞–ø—É—Å—Ç–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã "almau_shop_products" call.data - {call.data}')
    shop = AlmauShop()
    shop.parse_page(text=shop.load_page())
    try:
        await bot.send_message(call.message.chat.id,
                               'üîÑ –ù–∞—á–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ!')
        await db.clear_almaushop_table()
        for i in shop.result:
            await db.add_almau_shop_data(call.message.chat.id, i.product_name, i.price, i.currency, i.img, i.url)
        await bot.send_message(call.message.chat.id, '‚úÖ –î–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ almau shop —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
    except Exception as err:
        logging.exception(err)
        await bot.send_message(call.message.chat.id, '‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')


# –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ almaushop.kz/books –∫–Ω–∏–≥ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É –≤ –ë–î
@dp.callback_query_handler(text_contains='update_almaushop_books')
async def callback_inline_update_almaushop_books(call: CallbackQuery):
    logging.info(
        f'User({call.message.chat.id}) –∑–∞–ø—É—Å—Ç–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã "almau_shop_books" call.data - {call.data}')
    book_shop = AlmauShopBooks()
    book_shop.parse_page(text=book_shop.load_page())
    try:
        await bot.send_message(call.message.chat.id, 'üîÑ –ù–∞—á–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ!')
        await db.clear_almaushop_books_table()
        for i in book_shop.result:
            await db.add_almau_shop_books(call.message.chat.id, i.book_name, i.author_name, i.price, i.currency, i.img,
                                          i.url)
        await bot.send_message(call.message.chat.id, '‚úÖ –î–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ almau_shop_books —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
    except Exception as err:
        logging.exception(err)
        await bot.send_message(call.message.chat.id, '‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')


@dp.callback_query_handler(text='add_faq_almaushop', state=None)
async def callback_inline_add_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å', reply_markup=inline_keyboard_cancel_almaushop_faq_create())
    await CreateFaqAlmauShop.question.set()


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–Ω–æ–ø–æ–∫ –≤–µ–±—Å–∞–π—Ç–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –º–µ–Ω—é almaushop
@dp.callback_query_handler(text=['edit_website_b_almaushop', 'edit_contacts_b_almaushop'], state=None)
async def edit_button_content_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    if call.data == 'edit_website_b_almaushop':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üåê  –í–µ–±—Å–∞–π—Ç"',
                                  reply_markup=inline_keyboard_cancel_almaushop_website_contacts())
        await state.update_data(button_name='üåê  –í–µ–±—Å–∞–π—Ç')
    elif call.data == 'edit_contacts_b_almaushop':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "‚òé  –ö–æ–Ω—Ç–∞–∫—Ç—ã":',
                                  reply_markup=inline_keyboard_cancel_almaushop_website_contacts())
        await state.update_data(button_name='‚òé  –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    await EditButtonContentAlmauShop.button_content.set()


# @dp.callback_query_handler(text='cancel_almaushop_web_con', state=['*'])
# async def cancel_inline_almaushop_website_contacts(call: CallbackQuery, state: FSMContext):
#     logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
#     try:
#         await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#     except:
#         pass
#     await bot.send_message(chat_id=call.message.chat.id,
#                            text=f'‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ'
#                                 f'–í–æ–∑–≤—Ä–∞—Ç –≤ –ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
#     await state.reset_state()


@dp.message_handler(content_types=ContentType.ANY, state=EditButtonContentAlmauShop.button_content)
async def edit_button_content_almaushop_first_step(message: types.Message, state: FSMContext):
    try:
        await bot.edit_message_reply_markup(message.chat.id,
                                            message.message_id - 1)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    if message.content_type == 'text':
        if len(message.text) <= 4000:
            await state.update_data(button_content=message.text)
            await message.reply('‚úÖ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω.\n'
                                '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ',
                                reply_markup=inline_keyboard_edit_button_content_almaushop_or_cancel())
            await EditButtonContentAlmauShop.confirm.set()
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 4000 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML',
                reply_markup=inline_keyboard_cancel_almaushop_website_contacts())
    else:
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è',
                            reply_markup=inline_keyboard_cancel_almaushop_website_contacts())


@dp.callback_query_handler(text='edit_button_content_shop', state=EditButtonContentAlmauShop.confirm)
async def edit_button_content_almaushop_last_step(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    try:
        data = await state.get_data()
        await db.edit_almau_shop_menu_button(call.message.chat.id, data['button_content'], data['button_name'])
        await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await bot.send_message(chat_id=call.message.chat.id,
                               text=f'‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ - "{data["button_name"]}" –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ AlmaU Shop\n'
                                    f'–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
        await state.reset_state()
    except Exception as error:
        logging.info(f'Error - {error}')
        await bot.send_message(call.message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - {error}')


@dp.callback_query_handler(text='cancel_ed_but_con_shop', state=['*'])
async def edit_button_content_almaushop_last_step_cancel(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    # await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=f'‚ùå –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ - "{data["button_name"]}" –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ AlmaU Shop\n'
                                     f'–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()


@dp.message_handler(content_types=ContentType.ANY, state=CreateFaqAlmauShop.question)
async def callback_inline_add_faq_almaushop_question_step(message: types.Message, state: FSMContext):
    # await state.update_data(file_id=message.document.file_id, user_id=message.chat.id)
    # data = await state.get_data()
    try:
        await bot.edit_message_reply_markup(message.chat.id,
                                            message.message_id - 1)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    if message.content_type == 'text':
        if len(message.text) <= 300:
            await state.update_data(question=fmt.quote_html(message.text))
            await message.reply('‚úÖ –í–æ–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω.\n'
                                '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç:', reply_markup=inline_keyboard_cancel_almaushop_faq_create())
            await CreateFaqAlmauShop.answer.set()
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 300 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML', reply_markup=inline_keyboard_cancel_almaushop_faq_create())
    else:
        print(message.content_type)
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞', reply_markup=inline_keyboard_cancel_almaushop_faq_create())


@dp.message_handler(content_types=ContentType.ANY, state=CreateFaqAlmauShop.answer)
async def callback_inline_add_faq_almaushop_answer_step(message: types.Message, state: FSMContext):
    # await state.update_data(file_id=message.document.file_id, user_id=message.chat.id)
    # data = await state.get_data()
    try:
        await bot.edit_message_reply_markup(message.chat.id,
                                            message.message_id - 1)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    if message.content_type == 'text':
        if len(message.text) <= 4000:
            await state.update_data(answer=fmt.quote_html(message.text))
            await message.reply('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω.\n')
            data = await state.get_data()
            await message.answer(f'–í–∞—à –≤–æ–ø—Ä–æ—Å - {data["question"]}\n'
                                 f'–í–∞—à –æ—Ç–≤–µ—Ç - {data["answer"]}\n\n'
                                 f'–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ F.A.Q?', reply_markup=inline_keyboard_add_almaushop_faq_or_cancel())
            await state.reset_state(with_data=False)
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 4000 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML')
    else:
        print(message.content_type)
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞', reply_markup=inline_keyboard_cancel_almaushop_faq_create())


@dp.callback_query_handler(text='save_faq_almaushop', state=None)
async def callback_inline_add_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    try:
        data = await state.get_data()
        await db.add_almau_shop_faq(call.message.chat.id, data['question'], data['answer'])
        await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await bot.send_message(chat_id=call.message.chat.id,
                               text='‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ F.A.Q AlmaU Shop\n'
                                    '–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
        await state.reset_state()
    except Exception as error:
        logging.info(f'Error - {error}')
        await bot.send_message(call.message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - {error}')


@dp.callback_query_handler(text='cancel_almaushop_faq', state=None)
async def callback_inline_cancel_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await bot.send_message(chat_id=call.message.chat.id,
                           text='‚ùå –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ F.A.Q AlmaU Shop\n'
                                '–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()


@dp.callback_query_handler(text='cancel_step_almaushop_faq', state=['*'])
async def callback_inline_cancel_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text='<b>‚ùå –°–æ–∑–¥–∞–Ω–∏–µ F.A.Q —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n'
                                     '–í–æ–∑–≤—Ä–∞—Ç –≤ –ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:',
                                parse_mode='HTML',
                                reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()


# –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ AlmaU Shop FAQ –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∞
@dp.callback_query_handler(text='cancel_almaushop_faq_update', state=['*'])
async def callback_inline_cancel_faq_almaushop_update(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    data = await state.get_data()
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=f'–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:\n'
                                     f'<u>–í–æ–ø—Ä–æ—Å</u> - {data["question_text"]}\n'
                                     f'<u>–û—Ç–≤–µ—Ç</u> - {data["answer_text"]}',
                                reply_markup=inline_keyboard_edit_faq_almaushop_choice(), parse_mode='HTML')
    await EditFaqAlmauShop.choice.set()


#### –£–¥–∞–ª–µ–Ω–∏–µ FAQ AlmaU Shop ####
@dp.callback_query_handler(text='delete_faq_almaushop', state=None)
async def callback_inline_delete_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏–µ:',
                                reply_markup=await inline_keyboard_delete_faq_almaushop())
    # await DeleteFaqAlmauShop.question.set()


#### –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é Almau Shop - –û–¢–ú–ï–ù–ê –£–¥–∞–ª–µ–Ω–∏—è faq
@dp.callback_query_handler(text='back_to_almaushop_admin', state=['*'])
async def callback_inline_delete_faq_almaushop_back(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text='–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()


#### –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è FAQ Almau Shop
@dp.callback_query_handler(text='back_to_almaushop_admin_faq', state=['*'])
async def callback_inline_delete_faq_almaushop_back(call: CallbackQuery, state: FSMContext):
    await state.reset_state()
    await callback_inline_edit_faq_almaushop(call)


@dp.callback_query_handler(almau_shop_faq_delete_callback.filter(), state=None)
async def callback_inline_delete_faq_almaushop_final(call: CallbackQuery, state: FSMContext, callback_data: dict):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    id = callback_data.get('callback_id')
    question = await db.almaushop_faq_find_question(id)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=f'–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É:\n'
                                     f'<b>{question}</b>',
                                reply_markup=cancel_or_delete_faq_almau_shop())
    await state.update_data(question_text=fmt.quote_html(question), user_id=call.message.chat.id)
    await DeleteFaqAlmauShop.confirm_delete.set()


# –£–¥–∞–ª–µ–Ω–∏–µ FAQ AlmaU Shop –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.callback_query_handler(text='delete_faq_almaushop_final', state=DeleteFaqAlmauShop.confirm_delete)
async def callback_inline_send_schedule(call: CallbackQuery, state: FSMContext):
    try:
        data = await state.get_data()
        await db.delete_faq_almaushop_button(data["question_text"])
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                    text=f'‚úÖ –£–∫–∞–∑–∞–Ω–Ω—ã–π F.A.Q - <b>{data["question_text"]}</b> –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω\n'
                                         f'–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:',
                                    parse_mode='HTML',
                                    reply_markup=inline_keyboard_almau_shop_admin())
        await state.reset_state()
        logging.info(f'User({call.message.chat.id}) —É–¥–∞–ª–∏–ª FAQ Almau Shop –¥–ª—è {data["question_text"]}')
    except Exception as e:
        await call.message.answer(f'–û—à–∏–±–∫–∞ FAQ ALmau Shop –Ω–µ —É–¥–∞–ª–µ–Ω–æ, (–û—à–∏–±–∫–∞ - {e})')
        logging.info(f'–û—à–∏–±–∫–∞ - {e}')


@dp.callback_query_handler(text='edit_faq_almaushop', state=None)
async def callback_inline_edit_faq_almaushop(call: CallbackQuery):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:',
                                reply_markup=await inline_keyboard_edit_faq_almaushop())


@dp.callback_query_handler(almau_shop_faq_edit_callback.filter(), state=None)
async def callback_inline_edit_faq_almaushop_choice_step(call: CallbackQuery, state: FSMContext, callback_data: dict):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    id = callback_data.get('callback_id')
    db_request = await db.almaushop_faq_find_question_and_answer(id)
    question = db_request['question']
    answer = db_request['answer']
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=f'–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:\n'
                                     f'<u>–í–æ–ø—Ä–æ—Å</u> - {question}\n'
                                     f'<u>–û—Ç–≤–µ—Ç</u> - {answer}',
                                reply_markup=inline_keyboard_edit_faq_almaushop_choice(), parse_mode='HTML')
    await state.update_data(question_text=fmt.quote_html(question), answer_text=fmt.quote_html(answer),
                            user_id=call.message.chat.id, faq_id=id)
    await EditFaqAlmauShop.choice.set()


@dp.callback_query_handler(text='edit_faq_shop_q', state=EditFaqAlmauShop.choice)
async def edit_faq_almaushop_choice_step_question(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await bot.send_message(chat_id=call.message.chat.id,
                           text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å',
                           reply_markup=inline_keyboard_cancel_almaushop_faq_update())
    await EditFaqAlmauShop.question_confirm.set()


@dp.callback_query_handler(text='edit_faq_shop_a', state=EditFaqAlmauShop.choice)
async def edit_faq_almaushop_choice_step_answer(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await bot.send_message(chat_id=call.message.chat.id,
                           text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç',
                           reply_markup=inline_keyboard_cancel_almaushop_faq_update())
    await EditFaqAlmauShop.answer_confirm.set()


@dp.message_handler(content_types=ContentType.ANY, state=EditFaqAlmauShop.question_confirm)
async def edit_faq_almaushop_choice_step_question_final(message: types.Message, state: FSMContext):
    try:
        await bot.edit_message_reply_markup(message.chat.id,
                                            message.message_id - 1)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    if message.content_type == 'text':
        if len(message.text) <= 300:
            await state.update_data(selected_item=fmt.quote_html(message.text),
                                    thing_to_change='question_to_change')
            data = await state.get_data()
            await message.answer(f'–í–∞—à –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å - {data["selected_item"]}\n'
                                 f'–¥–ª—è –æ—Ç–≤–µ—Ç–∞ - {data["answer_text"]}\n'
                                 f'<u>(–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ)</u>',
                                 reply_markup=inline_keyboard_edit_almaushop_faq_or_cancel(), parse_mode='HTML')
            await state.reset_state(with_data=False)
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 300 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML',
                reply_markup=inline_keyboard_cancel_almaushop_faq_update())
    else:
        print(message.content_type)
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞', reply_markup=inline_keyboard_cancel_almaushop_faq_update())


@dp.message_handler(content_types=ContentType.ANY, state=EditFaqAlmauShop.answer_confirm)
async def edit_faq_almaushop_choice_step_answer_final(message: types.Message, state: FSMContext):
    try:
        await bot.edit_message_reply_markup(message.chat.id,
                                            message.message_id - 1)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    if message.content_type == 'text':
        if len(message.text) <= 4000:
            await state.update_data(selected_item=fmt.quote_html(message.text),
                                    thing_to_change='answer_to_change')
            data = await state.get_data()
            await message.answer(f'–í–∞—à –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç - {data["selected_item"]}\n'
                                 f'–¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ - {data["question_text"]}\n'
                                 f'<u>(–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ)</u>',
                                 reply_markup=inline_keyboard_edit_almaushop_faq_or_cancel(), parse_mode='HTML')
            await state.reset_state(with_data=False)
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 300 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML',
                reply_markup=inline_keyboard_cancel_almaushop_faq_update())
    else:
        print(message.content_type)
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞',
                            reply_markup=inline_keyboard_cancel_almaushop_faq_update())


@dp.callback_query_handler(text='edit_faq_shop_conf', state=None)
async def edit_faq_almaushop_choice_step_question_final_save(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    try:
        data = await state.get_data()
        if data['thing_to_change'] == 'question_to_change':
            await db.edit_almau_shop_faq_question(data['user_id'], data['selected_item'], data['faq_id'])
        elif data['thing_to_change'] == 'answer_to_change':
            await db.edit_almau_shop_faq_answer(data['user_id'], data['selected_item'], data['faq_id'])
        await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await bot.send_message(chat_id=call.message.chat.id,
                               text='‚úÖ –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ F.A.Q AlmaU Shop —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n'
                                    '–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
        await state.reset_state()
    except Exception as error:
        logging.info(f'Error - {error}')
        await bot.send_message(call.message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - {error}')


@dp.callback_query_handler(text='edit_faq_shop_dec', state=None)
async def edit_faq_almaushop_choice_step_question_final_decline(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    try:
        await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    except:
        pass
    await bot.send_message(chat_id=call.message.chat.id,
                           text='‚ùå –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ F.A.Q AlmaU Shop\n'
                                '–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()


@dp.callback_query_handler(text='cancel_del_faq_almaushop', state=DeleteFaqAlmauShop.confirm_delete)
async def callback_inline_cancel_faq_almaushop(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    data = await state.get_data()
    print(data)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=f'‚ùå –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è F.A.Q ({data["question_text"]})\n'
                                     f'–ê–¥–º–∏–Ω –º–µ–Ω—é AlmaU Shop:', reply_markup=inline_keyboard_almau_shop_admin())
    await state.reset_state()
############### –ê–¥–º–∏–Ω –º–µ–Ω—é –¥–ª—è AlmaU Shop –∫–æ–Ω–µ—Ü ####################
