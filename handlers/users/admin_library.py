import logging

from aiogram.utils import exceptions
from aiogram import types
from aiogram.types import CallbackQuery, ContentType
from aiogram.dispatcher import FSMContext
from loader import dp, bot
from utils.delete_messages import bot_delete_messages
from utils import db_api as db

from keyboards.inline import inline_keyboard_library_first_page_admin, inline_keyboard_library_second_page_admin, \
    inline_keyboard_edit_button_content_library_or_cancel

from states.admin import EditButtonContentLibrary


@dp.callback_query_handler(text='lib_next_page')
async def library_admin_menu(call: CallbackQuery):
    logging.info(
        f'User({call.message.chat.id}) –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω –º–µ–Ω—é –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏, call.data - {call.data}')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text='–ê–¥–º–∏–Ω –º–µ–Ω—é –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:', reply_markup=inline_keyboard_library_second_page_admin())
    await call.answer()


@dp.callback_query_handler(text=['edit_lib_website', 'edit_lib_contacts', 'edit_lib_work_hours',
                                 'edit_lib_courses', 'edit_lib_idcard', 'edit_lib_rules',
                                 'edit_lib_rights', 'edit_lib_unallow', 'edit_lib_respons'],
                           state=None)
async def edit_button_content_library(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    if call.data == 'edit_lib_website':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üåê –í–µ–±—Å–∞–π—Ç:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üåê –í–µ–±—Å–∞–π—Ç')
    elif call.data == 'edit_lib_contacts':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    elif call.data == 'edit_lib_work_hours':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã')
    elif call.data == 'edit_lib_courses':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üéì –û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üéì –û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã')
    elif call.data == 'edit_lib_idcard':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üí≥ –ü–æ—Ç–µ—Ä—è–ª(a) ID-–∫–∞—Ä—Ç—É:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üí≥ –ü–æ—Ç–µ—Ä—è–ª(a) ID-–∫–∞—Ä—Ç—É')
    elif call.data == 'edit_lib_rules':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚ö† –ü—Ä–∞–≤–∏–ª–∞:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='‚ö† –ü—Ä–∞–≤–∏–ª–∞')
    elif call.data == 'edit_lib_rights':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üì∞ –ü—Ä–∞–≤–∞ —á–∏—Ç–∞—Ç–µ–ª—è:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üì∞ –ü—Ä–∞–≤–∞ —á–∏—Ç–∞—Ç–µ–ª—è')
    elif call.data == 'edit_lib_unallow':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ üö´ –ß—Ç–æ –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='üö´ –ß—Ç–æ –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è')
    elif call.data == 'edit_lib_respons':
        await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚õî –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è:\n'
                                  '–î–ª—è –æ—Ç–º–µ–Ω—ã - /cancel')
        await state.update_data(button_name='‚õî –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è')
    await EditButtonContentLibrary.button_content.set()
    await call.answer()


@dp.message_handler(content_types=ContentType.ANY, state=EditButtonContentLibrary.button_content)
async def edit_button_content_library_text(message: types.Message, state: FSMContext):
    if message.content_type == 'text':
        if len(message.text) <= 4000:
            await state.update_data(button_content=message.text)
            await message.reply('‚úÖ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω.\n'
                                '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ',
                                reply_markup=inline_keyboard_edit_button_content_library_or_cancel())
            await EditButtonContentLibrary.confirm.set()
        else:
            await message.reply(
                f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ = <b>{len(message.text)}</b>. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 4000 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                parse_mode='HTML')
    else:
        await message.reply('–û—à–∏–±–∫–∞ - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç\n'
                            '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è')


@dp.callback_query_handler(text='edit_lib_button', state=EditButtonContentLibrary.confirm)
async def edit_button_content_library_confirm(call: CallbackQuery, state: FSMContext):
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    try:
        data = await state.get_data()
        await db.edit_library_menu_button(call.message.chat.id, data['button_name'], data['button_content'])
        await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
        await bot.send_message(call.message.chat.id,
                               f'‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ - {data["button_name"]} –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞')
        await bot.send_message(chat_id=call.message.chat.id,
                               text='–ê–¥–º–∏–Ω –º–µ–Ω—é –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:', reply_markup=inline_keyboard_library_first_page_admin())
        await state.reset_state()
        await call.answer()
    except Exception as error:
        logging.info(f'Error - {error}')
        await bot.send_message(call.message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - {error}')


@dp.callback_query_handler(text='cancel_edit_lib_button', state=EditButtonContentLibrary.confirm)
async def edit_button_content_library_cancel(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {call.data}')
    await bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # –£–±–∏—Ä–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await bot.send_message(call.message.chat.id,
                           f'‚ùå –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ - {data["button_name"]} –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞')
    await bot.send_message(chat_id=call.message.chat.id,
                           text='–ê–¥–º–∏–Ω –º–µ–Ω—é –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:', reply_markup=inline_keyboard_library_first_page_admin())
    await state.reset_state()
    await call.answer()
