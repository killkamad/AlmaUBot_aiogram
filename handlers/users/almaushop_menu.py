import asyncio
import logging

from aiogram import types
from aiogram.types import CallbackQuery

from keyboards.inline import almau_shop_faq_callback
from keyboards.inline.almaushop_buttons import inline_keyboard_faq_almaushop, inline_keyboard_faq_almaushop_back
from loader import dp, bot
# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –ë–î –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
from utils import db_api as db
from utils.misc import rate_limit


# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π


@rate_limit(1)
@dp.message_handler(lambda message: message.text in ['üõç  –ú–µ—Ä—á', 'üìö  –ö–Ω–∏–≥–∏', 'üåê  –í–µ–±—Å–∞–π—Ç', '‚òé  –ö–æ–Ω—Ç–∞–∫—Ç—ã', '‚Åâ  –ß–∞–í–æ'])
async def almaushop_text_buttons_handler(message: types.Message):
    logging.info(f"User({message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ {message.text}")
    request = 0
    # –ö–Ω–æ–ø–∫–∏ AlmaU Shop
    if message.text == 'üõç  –ú–µ—Ä—á':
        data = await db.almaushop_select_data()
        for item in data:
            text = f'<u><a href="{item["url"]}">{item["product_name"]}</a></u> \n' \
                   f'{item["price"]} {item["currency"]}\n'
            await bot.send_photo(chat_id=message.chat.id, photo=item["img"], caption=text)
            request += 1
            if request % 30 == 0:
                await asyncio.sleep(2)
                request = 0
    elif message.text == 'üìö  –ö–Ω–∏–≥–∏':
        data = await db.almaushop_select_books()
        for item in data:
            text = f'<u><a href="{item["url"]}">{item["book_name"]}</a></u> \n' \
                   f'{item["book_author"]} \n' \
                   f'{item["price"]} {item["currency"]}\n'
            await bot.send_photo(chat_id=message.chat.id, photo=item["img"], caption=text)
            request += 1
            if request % 30 == 0:
                await asyncio.sleep(2)
                request = 0
    elif message.text == 'üåê  –í–µ–±—Å–∞–π—Ç':
        button_content = await db.select_almau_shop_menu_button_content(message.text)
        await bot.send_message(chat_id=message.chat.id,
                               text=button_content)
    elif message.text == '‚òé  –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        button_content = await db.select_almau_shop_menu_button_content(message.text)
        await bot.send_message(message.chat.id,
                               text=button_content)
    elif message.text == '‚Åâ  –ß–∞–í–æ':
        text = "AlmaU Shop F.A.Q ‚Üò"
        await bot.send_message(message.chat.id, text=text, reply_markup=await inline_keyboard_faq_almaushop())


@dp.callback_query_handler(almau_shop_faq_callback.filter())
async def almaushop_faq_menu(call: CallbackQuery, callback_data: dict):
    id = callback_data.get('callback_id')
    answer = await db.almaushop_faq_find_answer(id)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text=answer, reply_markup=inline_keyboard_faq_almaushop_back())
    # logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {id}')
    # logging.info(f'User({call.message.chat.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {callback_data}')


@dp.callback_query_handler(text='back_to_almau_shop_faq')
async def almaushop_faq_menu_back(call: CallbackQuery):
    logging.info(f'User({call.message.chat.id}) –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é')
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                text="F.A.Q ‚Üò",
                                reply_markup=await inline_keyboard_faq_almaushop())
